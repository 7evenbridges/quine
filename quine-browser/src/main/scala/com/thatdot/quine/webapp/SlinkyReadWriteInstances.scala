package com.thatdot.quine.webapp

import scala.scalajs.js

import io.circe.JsonNumber
import slinky.readwrite.{Reader, Writer}

// Slinky Reader / Writer instances. Used by e.g. the code generated by its `@react` macro
object SlinkyReadWriteInstances {
  // TODO: should numbers just always be encoded as strings?
  implicit val jsonNumberWriter: Writer[JsonNumber] = n =>
    (n.toLong.fold[Object](Double.box(n.toDouble))(_.toString)).asInstanceOf[js.Object]
  implicit val jsonNumberReader: Reader[JsonNumber] = v =>
    js.typeOf(v) match {
      case "number" => JsonNumber.fromString(v.asInstanceOf[Double].toString).get
      case "string" =>
        JsonNumber
          .fromString(v.asInstanceOf[String])
          .getOrElse(throw new IllegalArgumentException("The string $v is not formatted as a valid number"))
      case other => throw new IllegalArgumentException(s"The value $v (of type $other) is not a number")
    }
}
