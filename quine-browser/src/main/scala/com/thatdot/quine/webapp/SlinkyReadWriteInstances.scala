package com.thatdot.quine.webapp

import scala.scalajs.js

import io.circe.Json
import io.circe.scalajs.{convertJsToJson, convertJsonToJs}
import slinky.readwrite.{Reader, Writer}

// Slinky Reader / Writer instances. Used by e.g. the code generated by its `@react` macro
object SlinkyReadWriteInstances {
  // These are unused at runtime as far as I can tell, but Slinky requires them at build time.
  // The cast here is because convertJsonToJs returns as `js.Any`, while Slinky's `Writer`
  // requires a `js.Object`. Slinky's own `Writer` instances for strings, ints, bools, etc
  // are implemented as just `.asInstanceOf[js.Object]` anyways, so this seems fine.
  implicit val jsonWriter: Writer[Json] = json => convertJsonToJs(json).asInstanceOf[js.Object]
  implicit val jsonReader: Reader[Json] = js => convertJsToJson(js).fold(throw _, identity)
}
